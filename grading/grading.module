<?php

/**
 *  Implementation of hook_perm().
 */
function grading_perm() {
  $perms = array();

  // foreach (content_fields() as $field) {
  //   $perms[] = 'edit '. $field['field_name'];
  //   // $perms[] = 'view '. $field['field_name'];
  // }

  $perms[] = 'view grading';
  $perms[] = 'view my grades';

  return $perms;
}


function grading_menu() {
  $items = array();

  $items['grading/viewgrades'] = array(
    'title' => 'View Course Grades',
    'page callback' => 'drupal_goto',
    'page arguments' => array('course'),
    'access arguments' => array('view grading'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grading/viewgpa'] = array(
    'title' => 'View Programme GPAs',
    'page callback' => 'drupal_goto',
    'page arguments' => array('gpa'),
    'access arguments' => array('view grading'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grading/viewmygrades'] = array(
    'title' => 'View My Grades',
    'page callback' => 'drupal_goto',
    'page arguments' => array('student'),
    'access arguments' => array('view my grades'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grading/stats'] = array(
    'title'=>'Grading Departmental Stats',
    'page callback' => 'drupal_get_form',
    'page arguments'=> array('grading_stats_department_form'),
    'access arguments' => array('view grading'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['grading/ahahstats'] = array(
    'page callback' => '_grading_ahah_stats',
    'access arguments' => array('view grading'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


/**
 * Implementation of hook_field_access().
 *
 * @see content_access().
 */
function grading_field_access($op, $field, $account, $node = NULL) {
  global $user;
  static $locked = array(); // Cache

  if (is_null($account)) {
    $account = $user;
  }

  // User #1 has all privileges:
  if ($account->uid == 1) {
    return TRUE;
  }

  switch ($op) {
    case 'view':
      return user_access('view grading', $account); // ALL content types are treated as grading, if more are added these can be differentiated later
      // return user_access($op .' '. $field['field_name'], $account);
      // return TRUE; // Normal access control determines whether all the content can be viewed or not

    case 'edit':
      $editablegradingfields = array('field_ca1' => 1, 'field_ca2' => 1, 'field_ca3' => 1, 'field_ca4' => 1, 'field_exam_score' => 1, 'field_comment_grades' => 1);
      if (empty($editablegradingfields[$field['field_name']])) {
		return FALSE; // No fields are editable except above ones
        // return user_access($op .' '. $field['field_name'], $account);
      }

      if (empty($node)) return FALSE;

      if (empty($locked)) { // Not cached...
        // Retrieve the locked indicators for all fields for any student_grades in a course that has the current user as a lecturer.
        // (After a number of years this could get big?)
        // Another assumption made here is that none of the fields are reused in other tables so that Drupal will not store them in dedicated tables!
        $sql = "SELECT sg.nid, field_ca1locked_value AS field_ca1, field_ca2locked_value AS field_ca2, field_ca3locked_value AS field_ca3, field_ca4locked_value AS field_ca4, field_examscorelocked_value AS field_exam_score
          FROM {content_type_student_grades} sg, {content_type_course_instance} ci
          WHERE sg.field_course_instance_nid=ci.nid AND (ci.field_lecturer_uid={$account->uid} OR ci.field_lecturer_alternate_uid={$account->uid})";

        $result = db_query($sql);

        while ($row = db_fetch_array($result)) {
          $locked[$row['nid']] = $row;
        }
      }

      if ($field['field_name'] === 'field_comment_grades') $field['field_name'] = 'field_exam_score'; // Assume comment should not be edited if the exam_score is locked

      // Check if this student_grades is owned by this lecturer
      if (empty($locked[$node->nid])) return FALSE;

      // Check if this lock is empty
      if (empty($locked[$node->nid][$field['field_name']])) return TRUE;
      return FALSE;
   }
  return TRUE;
}


function grading_stats_department_form(&$obj) {

  if (!empty($_GET['department'])) $departmentdefault = stripslashes($_GET['department']);
  else $departmentdefault = 'Arts and Theology';

  if (!empty($_GET['session'])) $sessiondefault = stripslashes($_GET['session']);
  else $sessiondefault = '2008/2009';

  if (!empty($_GET['semester'])) $semesterdefault = stripslashes($_GET['semester']);
  else $semesterdefault = '1';

  if (!empty($_GET['level'])) $leveldefault = stripslashes($_GET['level']);
  else $leveldefault = '100';

  $form['department'] = array(
    '#type' => 'select',
    '#default_value' => $departmentdefault,
    '#options' => _grading_department_list(),
    '#title' => 'Department',
    '#ahah' =>array(
      'event'   => 'change',
      'path'    => 'grading/ahahstats',
      'wrapper' => 'stats_here',
      'method'  => 'replace',
      'effect'  => 'fade'
      ),
    '#required' => true
    );

  $form['session'] = array(
    '#type' => 'select',
    '#default_value' => $sessiondefault,
    '#options' => _grading_session_list(),
    '#title' => 'Session',
    '#ahah' =>array(
      'event'   => 'change',
      'path'    => 'grading/ahahstats',
      'wrapper' => 'stats_here',
      'method'  => 'replace',
      'effect'  => 'fade'
      ),
    '#required' => true
    );

  $form['semester'] = array(
    '#type' => 'select',
    '#default_value' => $semesterdefault,
    '#options' => _grading_semester_list(),
    '#title' => 'Semester',
    '#ahah' =>array(
      'event'   => 'change',
      'path'    => 'grading/ahahstats',
      'wrapper' => 'stats_here',
      'method'  => 'replace',
      'effect'  => 'fade'
      ),
    '#required' => true
    );

  $form['level'] = array(
    '#type' => 'select',
    '#default_value' => $leveldefault,
    '#options' => _grading_level_list(),
    '#title' => 'Level',
    '#ahah' =>array(
      'event'   => 'change',
      'path'    => 'grading/ahahstats',
      'wrapper' => 'stats_here',
      'method'  => 'replace',
      'effect'  => 'fade'
      ),
    '#required' => true
    );

  $form['updatebutton'] = array(
    '#type' => 'button',
    '#value' => 'Update the Statistics',
    '#ahah' => array(
      'path'    => 'grading/ahahstats',
      'wrapper' => 'stats_here',
      'method'  => 'replace',
      'effect'  => 'fade'
      )
    );

  $form['statshere'] = array(
    '#type' => 'markup',
    '#prefix' => '<div id="stats_here">',
    '#value' => ' ',
    '#suffix' => '</div>',
    );

  return $form;
}


function _grading_department_list() {
  $names = array();
  $sql = "SELECT DISTINCT field_department_name_value AS name FROM {content_type_program} ORDER BY name ASC";
  $rows = db_query($sql);
  while ($row = db_fetch_object($rows)) {
    $names[$row->name] = $row->name;
  }
  return $names;
}


function _grading_session_list() {
  $names = array();
  $sql = "SELECT DISTINCT field_sess_name_value AS name FROM {content_type_course_instance} ORDER BY name ASC";
  $rows = db_query($sql);
  while ($row = db_fetch_object($rows)) {
    $names[$row->name] = $row->name;
  }
  return $names;
}


function _grading_semester_list() {
  $names = array();
  $sql = "SELECT DISTINCT field_semester_name_value AS name FROM {content_type_course_instance} ORDER BY name ASC";
  $rows = db_query($sql);
  while ($row = db_fetch_object($rows)) {
    $names[$row->name] = $row->name;
  }
//TEST DELETE!!!!!!!!!!!!!
$names['2'] = '2';
  return $names;
}


function _grading_level_list() {
  $names = array();
  $sql = "SELECT DISTINCT field_level_name_value AS name FROM {content_type_course_instance} ORDER BY name ASC";
  $rows = db_query($sql);
  while ($row = db_fetch_object($rows)) {
    $names[$row->name] = $row->name;
  }
  return $names;
}


function grading_stats_department_form_submit($form, &$state) {
  drupal_set_message('department: ' . $state['values']['department'] . '<br />');
}


function _grading_ahah_stats() {
  global $user;
  global $base_url;

  $department = stripslashes($_POST['department']);
  $level      = stripslashes($_POST['level']);
  $session    = stripslashes($_POST['session']);
  $semester   = stripslashes($_POST['semester']);

  $departmentenc = rawurlencode($department);
  $sessionenc    = rawurlencode($session);

  // Display statistics on exams completed
  $sql = "SELECT
    COUNT(*) AS number_students,
    SUM(fully) AS sumfully,
    SUM(part) AS sumpart,
    SUM(none) AS sumnone,
    MIN(ca1l) AS ca1locked,
    MIN(ca2l) AS ca2locked,
    MIN(ca3l) AS ca3locked,
    MIN(ca4l) AS ca4locked,
    MIN(examl) AS examlocked
  FROM
    (
      SELECT
        BIT_AND(sg.field_exam_score_value > 0) AS fully,
        BIT_OR(sg.field_exam_score_value > 0) AS part,
        BIT_AND(sg.field_exam_score_value = 0) AS none,
        MIN(sg.field_ca1locked_value) AS ca1l,
        MIN(sg.field_ca2locked_value) AS ca2l,
        MIN(sg.field_ca3locked_value) AS ca3l,
        MIN(sg.field_ca4locked_value) AS ca4l,
        MIN(sg.field_examscorelocked_value) AS examl
      FROM {content_type_student_grades} sg, {content_type_student_gpa} gpa, {content_type_program} p
      WHERE
        sg.field_student_gpa_nid=gpa.nid AND
        gpa.field_level_name_gpa_value='%s' AND
        gpa.field_sess_name_gpa_value='%s' AND
        gpa.field_semester_name_gpa_value='%s' AND
        gpa.field_program_ref_gpa_nid=p.nid AND
        p.field_department_name_value='%s'
      GROUP BY sg.field_mat_no_uid
    ) AS eachstudent";

  $summaryrows = db_query($sql, $level, $session, $semester, $department);
  $summaryrow = db_fetch_object($summaryrows);

  $output = '<table class="body-table"><tbody>';

  $output .= '<tr><th valign="top" class="table-label" colspan="2">DEPARTMENTAL SUMMARY RESULTS</th></tr>';

  $output .= '<tr>';
  $output .= '<td valign="top" class="table-label">Total No. of Registered Students</td>';
  $output .= '<td valign="top">' . $summaryrow->number_students . '</td>';
  $output .= '</tr>';

  $output .= '<tr>';
  $output .= '<td valign="top" class="table-label">No. of Students that Completed Exams</td>';
  $output .= '<td valign="top">' . $summaryrow->sumfully . '</td>';
  $output .= '</tr>';

  $output .= '<tr>';
  $output .= '<td valign="top" class="table-label">No. of Students that Partially Completed Exams</td>';
  $output .= '<td valign="top">' . ($summaryrow->sumpart - $summaryrow->sumfully) . '</td>';
  $output .= '</tr>';

  $output .= '<tr>';
  $output .= '<td valign="top" class="table-label">Number of Absent Students</td>';
  $output .= '<td valign="top">' . $summaryrow->sumnone . '</td>';
  $output .= '</tr>';

  $sql = "SELECT DISTINCT p.field_programme_name_value AS programme
    FROM {content_type_student_gpa} gpa, {content_type_program} p
    WHERE
      gpa.field_level_name_gpa_value='%s' AND
      gpa.field_sess_name_gpa_value='%s' AND
      gpa.field_semester_name_gpa_value='%s' AND
      gpa.field_program_ref_gpa_nid=p.nid AND
      p.field_department_name_value='%s' ORDER BY programme ASC";
  $programmerows = db_query($sql, $level, $session, $semester, $department);
  if (!empty($programmerows)) {
    $output .= '<tr><td colspan="2">View Programme Details...</td></tr>';

    while ($programmerow = db_fetch_object($programmerows)) {
      $programmeenc = rawurlencode($programmerow->programme);
      $output .= '<tr><td colspan="2"><a href="' . $base_url . "/gpa?programme={$programmeenc}&level={$level}&session={$sessionenc}&semester={$semester}" . '">' . $programmerow->programme . '</a></td></tr>';
    }
  }

  $output .= '<tr><td colspan="2"></td></tr>';

  // Find Dean uid
  $sql = "SELECT vs.user_id AS dean_uid
    FROM {content_type_program} p, {veritas_staff} vs, {users_roles} ur, {role} r
    WHERE p.field_department_name_value='%s' AND p.field_department_id_value=vs.department_id AND vs.user_id=ur.uid AND ur.rid=r.rid AND r.name='Dean'";
  $deanresult = db_query($sql, $department);
  if (!empty($deanresult)) {
    $dean_uid = '';
    while ($dean = db_fetch_object($deanresult)) {
      if ($dean_uid === '') $dean_uid = $dean->dean_uid;
      else $dean_uid = $dean_uid . ',' . $dean->dean_uid;
    }
  }
  else {
    $dean_uid = 0;
  }

  // Find Registrar uid
  $sql = "SELECT ur.uid AS registrar_uid
    FROM {users_roles} ur, {role} r
    WHERE ur.rid=r.rid AND r.name='Registrar'";
  $registrarresult = db_query($sql);
  if (!empty($registrarresult)) {
    $registrar_uid = '';
    while ($registrar = db_fetch_object($registrarresult)) {
      if ($registrar_uid === '') $registrar_uid = $registrar->registrar_uid;
      else $registrar_uid = $registrar_uid . ',' . $registrar->registrar_uid;
    }
  }
  else {
    $registrar_uid = 0;
  }

  // Find VC uid
  $sql = "SELECT ur.uid AS vc_uid
    FROM {users_roles} ur, {role} r
    WHERE ur.rid=r.rid AND r.name='VC'";
  $vcresult = db_query($sql);
  if (!empty($vcresult)) {
    $vc_uid = '';
    while ($vc = db_fetch_object($vcresult)) {
      if ($vc_uid === '') $vc_uid = $vc->vc_uid;
      else $vc_uid = $vc_uid . ',' . $vc->vc_uid;
    }
  }
  else {
    $vc_uid = 0;
  }

  $exams[1] = array('lock' => $summaryrow->ca1locked,  'gradestext' => 'Continuous Assessment 1', 'fieldtoapprove' => 'field_ca1locked_value',       'srcfield' => 'field_ca1_value', 'destfield' => 'field_ca1forstudent_value');
  $exams[2] = array('lock' => $summaryrow->ca2locked,  'gradestext' => 'Continuous Assessment 2', 'fieldtoapprove' => 'field_ca2locked_value',       'srcfield' => 'field_ca2_value', 'destfield' => 'field_ca2forstudent_value');
  $exams[3] = array('lock' => $summaryrow->ca3locked,  'gradestext' => 'Continuous Assessment 3', 'fieldtoapprove' => 'field_ca3locked_value',       'srcfield' => 'field_ca3_value', 'destfield' => 'field_ca3forstudent_value');
  $exams[4] = array('lock' => $summaryrow->ca4locked,  'gradestext' => 'Continuous Assessment 4', 'fieldtoapprove' => 'field_ca4locked_value',       'srcfield' => 'field_ca4_value', 'destfield' => 'field_ca4forstudent_value');
  $exams[5] = array('lock' => $summaryrow->examlocked, 'gradestext' => 'Semester Exam',           'fieldtoapprove' => 'field_examscorelocked_value', 'srcfield' => 'NONE', 'destfield' => 'NONE');

  global $eduerpdeanapprovalform;
  global $eduerpregistrarapprovalform;
  global $eduerpvcapprovalform;
  $showdeanform = false;
  $showregistrarform = false;
  $showvcform = false;

  foreach ($exams as $exam) {
    if ($exam['lock'] == 0) {
      $output .= '<tr><td colspan="2">Waiting on some Lecturer Approvals for ' . $exam['gradestext'] . '</td></tr>';
    }
    elseif ($exam['lock'] == 1) {
      $output .= '<tr><td colspan="2">Waiting on Head of Department to Approve ' . $exam['gradestext'] . ' for some Programmes</td></tr>';
    }
    elseif ($exam['lock'] == 2) {
      $dean_uid_array = explode(',', $dean_uid);
      if (in_array($user->uid, $dean_uid_array)) {
        $showdeanform = true;

        if ($exam['srcfield'] != 'NONE') { // if this is a CA, notification goes to VC also
          if (empty($registrar_uid)) {
            $registrar_uid = $vc_uid;
          }
          elseif (!empty($vc_uid)) {
            $registrar_uid = $registrar_uid . ',' . $vc_uid;
          }
        }
        $eduerpdeanapprovalform->department_url = $base_url . "/grading/stats?department={$departmentenc}&level={$level}&session={$sessionenc}&semester={$semester}";
        $eduerpdeanapprovalform->dean_uid = $dean_uid;
        $eduerpdeanapprovalform->registrar_uid = $registrar_uid;
        $eduerpdeanapprovalform->department = $department;
        $eduerpdeanapprovalform->level = $level;
        $eduerpdeanapprovalform->session = $session;
        $eduerpdeanapprovalform->semester = $semester;
        $eduerpdeanapprovalform->gradestext = $exam['gradestext'];
        $eduerpdeanapprovalform->fieldtoapprove = $exam['fieldtoapprove'];
        $eduerpdeanapprovalform->srcfield = $exam['srcfield'];
        $eduerpdeanapprovalform->destfield = $exam['destfield'];
      }
      else {
        $output .= '<tr><td colspan="2">Waiting on Dean to Approve ' . $exam['gradestext'] . '</td></tr>';
      }
      break;
    }
    elseif ($exam['lock'] == 3) { // This is only for final exam, CAs go straight to state 5
      $registrar_uid_array = explode(',', $registrar_uid);
      if (in_array($user->uid, $registrar_uid_array)) {
        $showregistrarform = true;

        $eduerpregistrarapprovalform->department_url = $base_url . "/grading/stats?department={$departmentenc}&level={$level}&session={$sessionenc}&semester={$semester}";
        $eduerpregistrarapprovalform->registrar_uid = $registrar_uid;
        $eduerpregistrarapprovalform->vc_uid = $vc_uid;
        $eduerpregistrarapprovalform->department = $department;
        $eduerpregistrarapprovalform->level = $level;
        $eduerpregistrarapprovalform->session = $session;
        $eduerpregistrarapprovalform->semester = $semester;
        $eduerpregistrarapprovalform->gradestext = $exam['gradestext'];
        $eduerpregistrarapprovalform->fieldtoapprove = $exam['fieldtoapprove'];
        $eduerpregistrarapprovalform->srcfield = $exam['srcfield'];
        $eduerpregistrarapprovalform->destfield = $exam['destfield'];
      }
      else {
        $output .= '<tr><td colspan="2">' . $exam['gradestext'] . ' Submitted to Registrar</td></tr>';
      }
      break;
    }
    elseif ($exam['lock'] == 4) {
      $vc_uid_array = explode(',', $vc_uid);
      if (in_array($user->uid, $vc_uid_array)) {
        $showvcform = true;

        $eduerpvcapprovalform->department_url = $base_url . "/grading/stats?department={$departmentenc}&level={$level}&session={$sessionenc}&semester={$semester}";
        $eduerpvcapprovalform->vc_uid = $vc_uid;
        $eduerpvcapprovalform->department = $department;
        $eduerpvcapprovalform->level = $level;
        $eduerpvcapprovalform->session = $session;
        $eduerpvcapprovalform->semester = $semester;
        $eduerpvcapprovalform->gradestext = $exam['gradestext'];
        $eduerpvcapprovalform->fieldtoapprove = $exam['fieldtoapprove'];
        $eduerpvcapprovalform->srcfield = $exam['srcfield'];
        $eduerpvcapprovalform->destfield = $exam['destfield'];
      }
      else {
        $output .= '<tr><td colspan="2">' . $exam['gradestext'] . ' Submitted to Vice Chancellor</td></tr>';
      }
      break;
    }
    elseif ($exam['lock'] == 5) {
      $output .= '<tr><td colspan="2">' . $exam['gradestext'] . ' Fully Approved</td></tr>';
    }
  }

  $output .= '</tbody></table>';

  if ($showdeanform) {
    $output .= drupal_get_form('approve_grades_dean_form');
  }
  elseif ($showregistrarform) {
    $output .= drupal_get_form('approve_grades_registrar_form');
  }
  elseif ($showvcform) {
    $output .= drupal_get_form('approve_grades_vc_form');
  }

  print drupal_to_js(array('data' => $output, 'status' => true));

  exit();
}


// Put up form to allow Dean to approve grades (relevant locked fields will then become 3 (or 5 if this is a CA) (1 is lecturer approval, 2 is HOD approval)).

function approve_grades_dean_form($form_state) {
  global $eduerpdeanapprovalform;

  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => 'Enter a comment on the grades for the Dean.',
    '#cols' => 80,
    '#rows' => 5,
    '#required' => TRUE
  );

  $form['department_url'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->department_url);
  $form['dean_uid'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->dean_uid);
  $form['registrar_uid'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->registrar_uid);
  $form['department'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->department);
  $form['level'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->level);
  $form['session'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->session);
  $form['semester'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->semester);
  $form['fieldtoapprove'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->fieldtoapprove);
  $form['srcfield'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->srcfield);
  $form['destfield'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->destfield);
  $form['gradestext'] = array('#type' => 'value', '#value' => $eduerpdeanapprovalform->gradestext);

  $form['submit'] = array('#type' => 'submit', '#value' => 'Approve ' . $eduerpdeanapprovalform->gradestext . '.');

  return $form;
}


function approve_grades_dean_form_validate($form, &$form_state) {
  if (empty($form_state['values']['comment'])) {
    form_set_error('comment', 'You must enter a comment for the Registrar!');
  }
}


function approve_grades_dean_form_submit($form, &$form_state) {
  global $user;

  $department     = $form_state['values']['department'];
  $level          = $form_state['values']['level'];
  $session        = $form_state['values']['session'];
  $semester       = $form_state['values']['semester'];
  $fieldtoapprove = $form_state['values']['fieldtoapprove'];
  $srcfield       = $form_state['values']['srcfield'];
  $destfield      = $form_state['values']['destfield'];
  $comment        = $form_state['values']['comment'];
  $department_url = $form_state['values']['department_url'];
  $dean_uid       = $form_state['values']['dean_uid'];
  $registrar_uid  = $form_state['values']['registrar_uid'];
  $gradestext     = $form_state['values']['gradestext'];

  if ($srcfield != 'NONE') {
    $statetoset = '5'; // This is a CA so make it fully approved
  }
  else {
    $statetoset = '3';
  }

  $sql = "UPDATE {content_type_student_grades} sg, {content_type_student_gpa} gpa, {content_type_program} p
    SET sg.`{$fieldtoapprove}`='{$statetoset}'
    WHERE
      sg.field_student_gpa_nid=gpa.nid AND
      gpa.field_level_name_gpa_value='%s' AND
      gpa.field_sess_name_gpa_value='%s' AND
      gpa.field_semester_name_gpa_value='%s' AND
      gpa.field_program_ref_gpa_nid=p.nid AND
      p.field_department_name_value='%s'";

  db_query($sql, $level, $session, $semester, $department);

  $sql = "SELECT p.field_college_name AS college
    FROM {content_type_program} p
    WHERE p.field_department_name_value='%s'
    LIMIT 1";
  $collegeresult = db_query($sql, $department);
  if (!empty($collegeresult)) {
    $collegerow = db_fetch_object($collegeresult);
    $college = $collegerow->college;
  }
  else {
    $college = '';
  }

  profile_load_profile($user);

  $name = '';
  if (!empty($user->profile_first_name) && !empty($user->profile_last_name)) {
    $middle = '';
    if (!empty($user->profile_middle_name)) $middle = $user->profile_middle_name . ' ';
    $name = "$user->profile_first_name {$middle}$user->profile_last_name";
  }

  $firsttime = TRUE;
  $registrar_uid_array = explode(',', $registrar_uid);
  foreach ($registrar_uid_array as $registrar_uid_i) {

    if (!empty($registrar_uid_i)) $destination_user = user_load($registrar_uid_i);
    else $destination_user = NULL;

    $subject = "$gradestext for $department/$level/$session/$semester Approved by $name";

    $body = '';
    if (!empty($destination_user->profile_first_name) && !empty($destination_user->profile_last_name)) {
      $middle = '';
      if (!empty($destination_user->profile_middle_name)) $middle = $destination_user->profile_middle_name . ' ';
      $body .= "Dear $destination_user->profile_first_name {$middle}$destination_user->profile_last_name,\n\n";
    }

    $body .= "I have approved $gradestext\n\n";
    $body .= "URL: $department_url\n";
    $body .= "Department: $department\n";
    $body .= "College: $college\n";
    $body .= "Level: $level\n";
    $body .= "Session: $session\n";
    $body .= "semester: $semester\n\n";
    $body .= "Dean's comment...\n";
    $body .= str_replace('<br />', "\n", $comment);
    $body .= "\n\n{$name}\n";

    if ($firsttime) {
      $node = new stdClass();
      $node->type                            = 'approval';
      $node->uid                             = 1;
      $node->status                          = 1;
      $node->promote                         = 0;
      $node->sticky                          = 0;
      $node->comment                         = 0;
      $node->title                           = $subject;
      $node->body                            = $comment;
      $node->field_url[0]['value']           = $department_url;
      $node->field_approver[0]['uid']        = $user->uid;
      $node->field_destination[0]['uid']     = $registrar_uid;
      $node->field_department1[0]['value']   = $department;
      $node->field_college1[0]['value']      = $college;
      $node->field_level1[0]['value']        = $level;
      $node->field_session1[0]['value']      = $session;
      $node->field_semester1[0]['value']     = $semester;
      $node->field_what_approved[0]['value'] = $gradestext;
      $node->field_action[0]['value']        = 'Approved by Dean';
      node_save($node);

      $firsttime = FALSE;
    }

    if (!empty($destination_user)) {
      $message = drupal_mail('grading', 'approval', $destination_user->mail, language_default(), array(), $user->mail, FALSE);
      $message['subject'] = $subject;
      $message['body'] = $body;
      drupal_mail_send($message);
    }
  }

  drupal_set_message('Approval successfull');
}


// Put up form to allow Registrar to approve grades (relevant locked fields will then become 4 (1 is lecturer approval, 2 is HOD approval, 3 is Dean approval)).

function approve_grades_registrar_form($form_state) {
  global $eduerpregistrarapprovalform;

  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => 'Enter a comment on the grades for the Registrar.',
    '#cols' => 80,
    '#rows' => 5,
    '#required' => TRUE
  );

  $form['department_url'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->department_url);
  $form['registrar_uid'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->registrar_uid);
  $form['vc_uid'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->vc_uid);
  $form['department'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->department);
  $form['level'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->level);
  $form['session'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->session);
  $form['semester'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->semester);
  $form['fieldtoapprove'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->fieldtoapprove);
  $form['srcfield'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->srcfield);
  $form['destfield'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->destfield);
  $form['gradestext'] = array('#type' => 'value', '#value' => $eduerpregistrarapprovalform->gradestext);

  $form['submit'] = array('#type' => 'submit', '#value' => 'Approve ' . $eduerpregistrarapprovalform->gradestext . '.');

  return $form;
}


function approve_grades_registrar_form_validate($form, &$form_state) {
  if (empty($form_state['values']['comment'])) {
    form_set_error('comment', 'You must enter a comment for the Vice Chancellor!');
  }
}


function approve_grades_registrar_form_submit($form, &$form_state) {
  global $user;

  $department     = $form_state['values']['department'];
  $level          = $form_state['values']['level'];
  $session        = $form_state['values']['session'];
  $semester       = $form_state['values']['semester'];
  $fieldtoapprove = $form_state['values']['fieldtoapprove'];
  $srcfield       = $form_state['values']['srcfield'];
  $destfield      = $form_state['values']['destfield'];
  $comment        = $form_state['values']['comment'];
  $department_url = $form_state['values']['department_url'];
  $registrar_uid  = $form_state['values']['registrar_uid'];
  $vc_uid         = $form_state['values']['vc_uid'];
  $gradestext     = $form_state['values']['gradestext'];

  $sql = "UPDATE {content_type_student_grades} sg, {content_type_student_gpa} gpa, {content_type_program} p
    SET sg.`{$fieldtoapprove}`='4'
    WHERE
      sg.field_student_gpa_nid=gpa.nid AND
      gpa.field_level_name_gpa_value='%s' AND
      gpa.field_sess_name_gpa_value='%s' AND
      gpa.field_semester_name_gpa_value='%s' AND
      gpa.field_program_ref_gpa_nid=p.nid AND
      p.field_department_name_value='%s'";

  db_query($sql, $level, $session, $semester, $department);

  $sql = "SELECT p.field_college_name AS college
    FROM {content_type_program} p
    WHERE p.field_department_name_value='%s'
    LIMIT 1";
  $collegeresult = db_query($sql, $department);
  if (!empty($collegeresult)) {
    $collegerow = db_fetch_object($collegeresult);
    $college = $collegerow->college;
  }
  else {
    $college = '';
  }

  profile_load_profile($user);

  $name = '';
  if (!empty($user->profile_first_name) && !empty($user->profile_last_name)) {
    $middle = '';
    if (!empty($user->profile_middle_name)) $middle = $user->profile_middle_name . ' ';
    $name = "$user->profile_first_name {$middle}$user->profile_last_name";
  }

  $firsttime = TRUE;
  $vc_uid_array = explode(',', $vc_uid);
  foreach ($vc_uid_array as $vc_uid_i) {

    if (!empty($vc_uid_i)) $destination_user = user_load($vc_uid_i);
    else $destination_user = NULL;

    $subject = "$gradestext for $department/$level/$session/$semester Approved by $name";

    $body = '';
    if (!empty($destination_user->profile_first_name) && !empty($destination_user->profile_last_name)) {
      $middle = '';
      if (!empty($destination_user->profile_middle_name)) $middle = $destination_user->profile_middle_name . ' ';
      $body .= "Dear $destination_user->profile_first_name {$middle}$destination_user->profile_last_name,\n\n";
    }

    $body .= "I have approved $gradestext\n\n";
    $body .= "URL: $department_url\n";
    $body .= "Department: $department\n";
    $body .= "College: $college\n";
    $body .= "Level: $level\n";
    $body .= "Session: $session\n";
    $body .= "semester: $semester\n\n";
    $body .= "Registrar's comment...\n";
    $body .= str_replace('<br />', "\n", $comment);
    $body .= "\n\n{$name}\n";

    if ($firsttime) {
      $node = new stdClass();
      $node->type                            = 'approval';
      $node->uid                             = 1;
      $node->status                          = 1;
      $node->promote                         = 0;
      $node->sticky                          = 0;
      $node->comment                         = 0;
      $node->title                           = $subject;
      $node->body                            = $comment;
      $node->field_url[0]['value']           = $department_url;
      $node->field_approver[0]['uid']        = $user->uid;
      $node->field_destination[0]['uid']     = $vc_uid;
      $node->field_department1[0]['value']   = $department;
      $node->field_college1[0]['value']      = $college;
      $node->field_level1[0]['value']        = $level;
      $node->field_session1[0]['value']      = $session;
      $node->field_semester1[0]['value']     = $semester;
      $node->field_what_approved[0]['value'] = $gradestext;
      $node->field_action[0]['value']        = 'Approved by Registrar';
      node_save($node);

      $firsttime = FALSE;
    }

    if (!empty($destination_user)) {
      $message = drupal_mail('grading', 'approval', $destination_user->mail, language_default(), array(), $user->mail, FALSE);
      $message['subject'] = $subject;
      $message['body'] = $body;
      drupal_mail_send($message);
    }
  }

  drupal_set_message('Approval successfull');
}


// Put up form to allow VC to approve grades (relevant locked fields will then become 5)
// Also set the student visible exam score to the values set by the lecturer

function approve_grades_vc_form($form_state) {
  global $eduerpvcapprovalform;

  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => 'Enter a comment on the grades for the Record.',
    '#cols' => 80,
    '#rows' => 5,
    '#required' => TRUE
  );

  $form['department_url'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->department_url);
  $form['vc_uid'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->vc_uid);
  $form['department'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->department);
  $form['level'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->level);
  $form['session'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->session);
  $form['semester'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->semester);
  $form['fieldtoapprove'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->fieldtoapprove);
  $form['gradestext'] = array('#type' => 'value', '#value' => $eduerpvcapprovalform->gradestext);

  $form['submit'] = array('#type' => 'submit', '#value' => 'Approve ' . $eduerpvcapprovalform->gradestext . '.');

  return $form;
}


function approve_grades_vc_form_validate($form, &$form_state) {
  if (empty($form_state['values']['comment'])) {
    form_set_error('comment', 'You must enter a comment for the Record!');
  }
}


function approve_grades_vc_form_submit($form, &$form_state) {
  global $user;

  $department     = $form_state['values']['department'];
  $level          = $form_state['values']['level'];
  $session        = $form_state['values']['session'];
  $semester       = $form_state['values']['semester'];
  $fieldtoapprove = $form_state['values']['fieldtoapprove'];
  $comment        = $form_state['values']['comment'];
  $department_url = $form_state['values']['department_url'];
  $vc_uid         = $form_state['values']['vc_uid'];
  $gradestext     = $form_state['values']['gradestext'];

  $sql = "UPDATE {content_type_student_grades} sg, {content_type_student_gpa} gpa, {content_type_program} p
    SET sg.`{$fieldtoapprove}`='5'
    WHERE
      sg.field_student_gpa_nid=gpa.nid AND
      gpa.field_level_name_gpa_value='%s' AND
      gpa.field_sess_name_gpa_value='%s' AND
      gpa.field_semester_name_gpa_value='%s' AND
      gpa.field_program_ref_gpa_nid=p.nid AND
      p.field_department_name_value='%s'";

  db_query($sql, $level, $session, $semester, $department);

  $sql = "UPDATE {content_type_student_grades} sg, {content_type_student_gpa} gpa, {content_type_program} p
    SET sg.`field_examscoreforstudent_value`=sg.`field_exam_score_value`
    WHERE
      sg.field_student_gpa_nid=gpa.nid AND
      gpa.field_level_name_gpa_value='%s' AND
      gpa.field_sess_name_gpa_value='%s' AND
      gpa.field_semester_name_gpa_value='%s' AND
      gpa.field_program_ref_gpa_nid=p.nid AND
      p.field_department_name_value='%s'";
  db_query($sql, $level, $session, $semester, $department);

  $sql = "SELECT p.field_college_name AS college
    FROM {content_type_program} p
    WHERE p.field_department_name_value='%s'
    LIMIT 1";
  $collegeresult = db_query($sql, $department);
  if (!empty($collegeresult)) {
    $collegerow = db_fetch_object($collegeresult);
    $college = $collegerow->college;
  }
  else {
    $college = '';
  }

  profile_load_profile($user);

  $name = '';
  if (!empty($user->profile_first_name) && !empty($user->profile_last_name)) {
    $middle = '';
    if (!empty($user->profile_middle_name)) $middle = $user->profile_middle_name . ' ';
    $name = "$user->profile_first_name {$middle}$user->profile_last_name";
  }

  $subject = "$gradestext for $department/$level/$session/$semester Approved by $name";

  $node = new stdClass();
  $node->type                            = 'approval';
  $node->uid                             = 1;
  $node->status                          = 1;
  $node->promote                         = 0;
  $node->sticky                          = 0;
  $node->comment                         = 0;
  $node->title                           = $subject;
  $node->body                            = $comment;
  $node->field_url[0]['value']           = $department_url;
  $node->field_approver[0]['uid']        = $user->uid;
  $node->field_department1[0]['value']   = $department;
  $node->field_college1[0]['value']      = $college;
  $node->field_level1[0]['value']        = $level;
  $node->field_session1[0]['value']      = $session;
  $node->field_semester1[0]['value']     = $semester;
  $node->field_what_approved[0]['value'] = $gradestext;
  $node->field_action[0]['value']        = 'Approved by VC';
  node_save($node);

  drupal_set_message('Approval successfull');
}
?>