<?php

//include(drupal_get_path('module', 'veritas') . '/veritas_global.inc');


function hostel_allocation_menu() {
  $items['hostel_allocation/alloc_admin'] = array(
    'title' => 'Hostel Administration',
    'page callback' => 'hostel_admin',
    'access arguments' => array('hostel_allocation admin'),
    'type' => MENU_NORMAL_ITEM,
    
  );
  
  $items['hostel_allocation/create_modify_hostel']=array(
    'title'=>"Create or Modify Hostel",
    'page callback' => 'hostel_allocation_create_modify_hostel',
    'access arguments' => array('hostel_allocation user'),
    'type' => MENU_CALLBACK,
  );
  
  $items['hostel_allocation/create_modify_block']=array(
    'title'=>"Create or Modify Block",
    'page callback' => 'hostel_allocation_create_modify_block',
    'access arguments' => array('hostel_allocation user'),
    'type' => MENU_CALLBACK,
  );
  
  
  $items['hostel_allocation/create_modify_room']=array(
    'title'=>"Create or Modify Room",
    'page callback' => 'hostel_allocation_create_modify_room',
    'access arguments' => array('hostel_allocation user'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
  
 }
 
 
function hostel_allocation_perm() {
  return array('hostel_allocation user', 'hostel_allocation admin');
}


function hostel_admin() {
  ob_start();

  echo '<br /><hr /><br />';

  echo drupal_get_form('set_session_form');
  echo '<br /><hr /><br />';

  echo '<a href="' . url('hostel_allocation/create_modify_hostel') . '">Create or Modify Hostel</a>';
  echo '<br /><br /><hr /><br />';
  
  echo '<a href="' . url('hostel_allocation/create_modify_block') . '">Create or Modify Blocks</a>';
  echo '<br /><br /><hr /><br />';
  
  echo '<a href="' . url('hostel_allocation/create_modify_room') . '">Create or Modify Rooms</a>';
  echo '<br /><br /><hr /><br />';
  
  echo 'Create or Modify Allocation Rules';
  echo '<br /><br /><hr /><br />';
  
  echo 'Modify Global Settings';
  echo '<br /><br /><hr /><br />';
  
  echo 'Direct Room Reservaion';
  echo '<br /><br /><hr /><br />';
  return ob_get_clean();
}
  

function hostel_allocation_create_modify_hostel() {
  global $user;
  ob_start();
  //perform single check for editing
  $forModify = (arg(2) && is_valid_hostel(arg(2))) ? true : false;
  
  $isAuthorized = true;
  //if (! staff_has_eduerp_role($user->uid, 0, 0, array('Role Assigner'))) $isAuthorized = false; else $isAuthorized = true;

  echo '<br /><hr /><br />';
  
  $navi = "<font size = '1px'><a href = '". url("hostel_allocation/alloc_admin/") ."'>Hostel Administration</a>&nbsp; &raquo; &nbsp;<b>Create or Modify Hostel</b></font><br /><br />";
  $navi .= '<br /><hr /><br />';
  echo $navi;
  
  if (! $isAuthorized) {
    echo Error_Types(104);

  }
  else {

    if($forModify)
      echo "<b>Modify Hostel</b> - Please make any required change(s) to the hostel<br />";
    else
      echo "<b>Create Hostel</b> - Please fill the form below to create a new Hostel<br />";


    echo drupal_get_form('hostel_allocation_create_edit_hostel_form');
    
  }
  
  echo '<br /><hr /><br />';
  
  if(! $forModify) {
    //display existing hostels here
    echo hostel_allocation_display_available_hostels();

    echo '<br /><hr /><br />';
  }
  
  return ob_get_clean();
}


function is_valid_hostel ($hostel_nid) {
  $result = db_query("SELECT nid FROM {content_type_hostels} WHERE nid =%d ", $hostel_nid);
  if (db_affected_rows($result) > 0 ) return true;

  return false;
}


function hostel_allocation_create_edit_hostel_form() {
  if (isset($_SESSION['eduerp_hostel_nid']))$_POST['hostel_nid'] = $_SESSION['eduerp_hostel_nid'];
  //echo arg(2);
  //if (isset($_POST['hostel_nid'])) {
  if (arg(2) && is_valid_hostel(arg(2))) {
    if (empty($_POST['hostel_name'])) {
      $result = db_query('SELECT field_hostel_name_value AS name, field_description_value AS description, field_hostel_status_value AS hostel_status FROM {content_type_hostels} WHERE nid = %d', arg(2));
      $hostel_edit_record = db_fetch_object($result);
    }
  }
  $form['#title'] = 'Create New Hostel';
  $form['hostel_name'] = array(
    '#title' => 'Hostel Name',
    '#type' => 'textfield',
    '#size' => 40,
    '#required' => TRUE
  );
  if ($hostel_edit_record) $form['hostel_name']['#value'] = $hostel_edit_record->name;

  $form['hostel_description'] = array(
    '#title' => 'Hostel Description',
    '#type' => 'textarea',
    '#size' => 255,
    '#required' => TRUE
  );
  if ($hostel_edit_record) $form['hostel_description']['#value'] = $hostel_edit_record->description;
  
  $form['hostel_status'] = array(
    '#type' => 'select',
    '#options' => array(0=>'Not Active', 1=>'Activate'),
    '#title' => 'Hostel Status',
    '#required' => TRUE
    );
  if ($hostel_edit_record) $form['hostel_status']['#value'] = $hostel_edit_record->hostel_status;
  
  if (isset($_POST['hostel_nid'])) {
    $form['hostel_nid'] = array(
    '#title' => 'Hostel nid',
    '#type' => 'hidden',
    '#value' => $_POST['hostel_nid']
    );

  }
  $form['submit'] = array(
    '#value' => 'Create Hostel',
    '#type' => 'submit'
  );
  //if (isset($_POST['hostel_nid'])) $form['submit']['#value'] = 'Update Hostel';
  if(arg(2)) $form['submit']['#value'] = 'Update Hostel';

  return $form;


}


function hostel_allocation_create_edit_hostel_form_validate($form, &$form_state){
 // if (isset($_POST['hostel_nid'])) {//validate MODIFY
  if(arg(2) && is_valid_hostel(arg(2))) {
    if (is_Hostel_Name_Existing($form_state['values']['hostel_name'], arg(2)))
      form_set_error('hostel_name', Error_Types(131));

  }
  else {//validate CREATE
    if(is_Hostel_Name_Existing($form_state['values']['hostel_name']))
      form_set_error('hostel_name', Error_Types(131));
  }


}


function hostel_allocation_create_edit_hostel_form_submit($form, &$form_state) {
  //if (isset($form_state['values']['hostel_nid']) && ! preg_match("/^[0-9]{1,12}$/", $form_state['values']['hostel_nid'])) {//the user is trying to edit a given hostel. OK!
  if (arg(2)) {//the user is trying to edit a given hostel. OK!
    $node = node_load(arg(2));
    $node->title                            = $form_state['values']['hostel_name'];
    $node->field_hostel_name[0]['value']    = $form_state['values']['hostel_name'];
    $node->field_description[0]['value']    = $form_state['values']['hostel_description'];
    $node->field_hostel_status[0]['value']  = $form_state['values']['hostel_status'];

    drupal_set_message($form_state['values']['hostel_name'] . ' Hostel was modified successfully!<br />');
    node_save($node);
    drupal_goto("/hostel_allocation/create_modify_hostel/");
    //unset($_SESSION['eduerp_hostel_nid']);
  }
  else {
    $node = new stdClass();
    $node->type                              = 'hostels';
    $node->uid                               = 1;  // Admin
    $node->status                            = 1;  // Published
    $node->promote                           = 0;
    $node->sticky                            = 0;
    $node->comment                           = 0;
    $node->title                             = $form_state['values']['hostel_name'];
    $node->field_hostel_name[0]['value'] 	 = $form_state['values']['hostel_name'];
	$node->field_description[0]['value'] 	 = $form_state['values']['hostel_description'];
    $node->field_hostel_status[0]['value'] 	 = $form_state['values']['hostel_status'];

    //$department = $node->nid;

    drupal_set_message($form_state['values']['hostel_name'] . ' Hostel has been created!<br />');
    node_save($node);
  }

  


}


function is_Hostel_Name_Existing($hostel_name, $nid = 0) {
  //now if nid is zero then the check is coming from CREATE else it is coming from UPDATE
  if ($nid != 0)
    $result = db_query("SELECT nid FROM {content_type_hostels} WHERE field_hostel_name_value = '%s' AND nid != %d ", $hostel_name, $nid);
  else
    $result = db_query("SELECT nid FROM {content_type_hostels} WHERE field_hostel_name_value='%s' ", $hostel_name);

  if (db_fetch_object($result)) return true;

  return false;
}


function hostel_allocation_display_available_hostels() {
  $hostels = get_hostels(0, false);
  $html = "
  <div id='assigned_courses'>
  <b>Available Hostels</b> - Please click on a Hostel name to Modify it.<br /> ";
  if (isset($hostels) && is_array($hostels) && sizeof($hostels)) {
    $html .="
    <table border=1>
      <tr>
        <th><b>#</b></th>
        <th><b>Hostel Name</b></th>
        <th><b>Hostel Description</b></th>
        <th><b>Hostel Status</b></th>
      </tr>";$i = 1;
    
    
      foreach ($hostels as $v){
        if ($i%2) $rcolor = "#E5E5E5"; else $rcolor = "#FFFFFF";
          $html .= "
           <tr bgcolor = \"$rcolor\" onMouseOver = \"this.bgColor = '#FDD381';\" onMouseOut = \"this.bgColor = '$rcolor';\">
             <td>". $i++ ."</td>
             <td><a href='". url("hostel_allocation/create_modify_hostel/" . $v['hostel_nid'])  . "'>". $v['hostel_name'] ."</a></td>
             <td>". $v['hostel_description'] ."</td>
             <td>". $v['hostel_status'] ."</td>
           </tr>";
      }
     $html .= "
    </table>";
   }
   else {
     $html .= Error_Types(106);
   
   
   }
  $html .= "

  </div>";
  return $html;

}


function get_hostels($hostel_nid = 0, $forCombo = true) {
  $r = db_query("SELECT nid, field_hostel_name_value AS hostel_name, field_description_value AS hostel_description, IF(field_hostel_status_value = 1, 'Active', 'Not Active') AS hostel_status
      FROM {content_type_hostels} 
      ORDER BY field_hostel_name_value");
  if (db_affected_rows($r) > 0 ){
    while ($f = db_fetch_object($r)){
      if($forCombo) {
        $hostels[$f->nid] = $f->hostel_name;
      
      }
      else{
        $hostels[$f->nid]['hostel_name'] = $f->hostel_name;
        $hostels[$f->nid]['hostel_description'] = $f->hostel_description;
        $hostels[$f->nid]['hostel_status'] = $f->hostel_status;
        $hostels[$f->nid]['hostel_nid'] = $f->nid;
      }

    }
  }
  else {
    if ($forCombo)
      $hostels[] = strip_tags(Error_Types(106));
    else
      $hostels = array();
    
  }
  return $hostels;
}


function hostel_allocation_create_modify_block() {
  global $user;
  ob_start();
  //perform single check for editing
  $forModify = (arg(2) && is_valid_block(arg(2))) ? true : false;
  
  $isAuthorized = true;
  //if (! staff_has_eduerp_role($user->uid, 0, 0, array('Role Assigner'))) $isAuthorized = false; else $isAuthorized = true;

  echo '<br /><hr /><br />';
  
  $navi = "<font size = '1px'><a href = '". url("hostel_allocation/alloc_admin/") ."'>Hostel Administration</a>&nbsp; &raquo; &nbsp;<b>Create or Modify Block</b></font><br /><br />";
  $navi .= '<br /><hr /><br />';
  echo $navi;
  
  if (! $isAuthorized) {
    echo Error_Types(104);

  }
  else {

    if($forModify)
      echo "<b>Modify Block</b> - Please make any required change(s) to the Block<br />";
    else
      echo "<b>Create Block</b> - Please fill the form below to create a new Block<br />";


    echo drupal_get_form('hostel_allocation_create_edit_block_form');
    
  }
  
  echo '<br /><hr /><br />';
  
  if(! $forModify) {
    //display existing blocks here
    echo hostel_allocation_display_available_blocks();

    echo '<br /><hr /><br />';
  }
  
  return ob_get_clean();
}


function hostel_allocation_create_edit_block_form() {
  //if (isset($_SESSION['eduerp_hostel_nid']))$_POST['hostel_nid'] = $_SESSION['eduerp_hostel_nid'];
  //echo arg(2);
  //if (isset($_POST['hostel_nid'])) {
  if (arg(2) && is_valid_block(arg(2))) {
    if (empty($_POST['block_name'])) {
      $result = db_query('SELECT field_block_name_value AS block_name, field_block_type_value AS block_type, field_block_status_value AS block_status, field_hostel_id_nid AS hostel_nid FROM {content_type_blocks} WHERE nid = %d', arg(2));
      $block_edit_record = db_fetch_object($result);
    }
  }
  $form['#title'] = 'Create New Block';
  
  $form['hostel_nid'] = array(
    '#title' => 'Hostel Name',
    '#type' => 'select',
    '#options' => get_hostels(0, true), //array(0=>'Mixed', 1=>'Male Only', 2=>'Female Only'),
    '#required' => TRUE
  );
  if ($block_edit_record) $form['hostel_nid']['#value'] = $block_edit_record->hostel_nid;
  
  $form['block_name'] = array(
    '#title' => 'Block Name',
    '#type' => 'textfield',
    '#size' => 40,
    '#required' => TRUE
  );
  if ($block_edit_record) $form['block_name']['#value'] = $block_edit_record->block_name;

  $form['block_type'] = array(
    '#title' => 'Block Type',
    '#type' => 'select',
    '#options' => array(0=>'Mixed', 1=>'Male Only', 2=>'Female Only'),
    '#required' => TRUE
  );
  if ($block_edit_record) $form['block_type']['#value'] = $block_edit_record->block_type;
  
  $form['block_status'] = array(
    '#type' => 'select',
    '#options' => array(0=>'Not Active', 1=>'Activate'),
    '#title' => 'Block Status',
    '#required' => TRUE
    );
  if ($block_edit_record) $form['block_status']['#value'] = $block_edit_record->block_status;
  
  if (isset($_POST['block_nid'])) {
    $form['block_nid'] = array(
    '#title' => 'Block nid',
    '#type' => 'hidden',
    '#value' => $_POST['block_nid']
    );

  }
  $form['submit'] = array(
    '#value' => 'Create Block',
    '#type' => 'submit'
  );
  //if (isset($_POST['hostel_nid'])) $form['submit']['#value'] = 'Update Hostel';
  if(arg(2)) $form['submit']['#value'] = 'Update Block';

  return $form;


}


function hostel_allocation_display_available_blocks() {
  $blocks = get_blocks(0, false);
  $html = "
  <div id='assigned_courses'>
  <b>Available Blocks</b> - Please click on a Block name to Modify it.<br /> ";
  if (isset($blocks) && is_array($blocks) && sizeof($blocks)) {
    $html .="
    <table border=1>
      <tr>
        <th><b>#</b></th>
        <th><b>Hostel Name</b></th>
        <th><b>Block Name</b></th>
        <th><b>Block Type</b></th>
        <th><b>Block Status</b></th>
      </tr>";$i = 1;
    
      $blockTypes = array(0=>'Mixed', 1=>'Male Only', 2=>'Female Only');
      foreach ($blocks as $v){
        if ($i%2) $rcolor = "#E5E5E5"; else $rcolor = "#FFFFFF";
          $html .= "
           <tr bgcolor = \"$rcolor\" onMouseOver = \"this.bgColor = '#FDD381';\" onMouseOut = \"this.bgColor = '$rcolor';\">
             <td>". $i++ ."</td>
             <td>". $v['hostel_name'] ."</td>
             <td><a href='". url("hostel_allocation/create_modify_block/" . $v['block_nid'])  . "'>". $v['block_name'] ."</a></td>
             <td>". $blockTypes[$v['block_type']] ."</td>
             <td>". $v['block_status'] ."</td>
           </tr>";
      }
     $html .= "
    </table>";
   }
   else {
     $html .= Error_Types(106);
   
   
   }
  $html .= "

  </div>";
  return $html;

}


function get_blocks($block_nid = 0, $forCombo = true) {
  $r = db_query("SELECT b.nid nid, field_hostel_name_value AS hostel_name, field_block_name_value AS block_name, field_block_type_value AS block_type, IF(field_block_status_value = 1, 'Active', 'Not Active') AS block_status
      FROM {content_type_blocks} b INNER JOIN {content_type_hostels} h ON b.field_hostel_id_nid=h.nid
      ORDER BY field_hostel_name_value");
  if (db_affected_rows($r) > 0 ){
    while ($f = db_fetch_object($r)){
      if($forCombo) {
        $blocks[$f->nid] = $f->block_name;
      
      }
      else{
        $blocks[$f->nid]['hostel_name'] = $f->hostel_name;
        $blocks[$f->nid]['block_name'] = $f->block_name;
        $blocks[$f->nid]['block_type'] = $f->block_type;
        $blocks[$f->nid]['block_status'] = $f->block_status;
        $blocks[$f->nid]['block_nid'] = $f->nid;
      }

    }
  }
  else {
    if ($forCombo)
      $blocks[] = strip_tags(Error_Types(106));
    else
      $blocks = array();
    
  }
  return $blocks;
}


function hostel_allocation_create_edit_block_form_validate($form, &$form_state){
 // if (isset($_POST['hostel_nid'])) {//validate MODIFY
  if(arg(2) && is_valid_block(arg(2))) {
    if (is_Block_Name_Existing($form_state['values']['block_name'], $form_state['values']['hostel_nid'], arg(2)))
      form_set_error('block_name', Error_Types(132));

  }
  else {//validate CREATE
    if(is_Block_Name_Existing($form_state['values']['block_name'], $form_state['values']['hostel_nid']))
      form_set_error('block_name', Error_Types(132));
  }


}


function hostel_allocation_create_edit_block_form_submit($form, &$form_state) {
  //if (isset($form_state['values']['hostel_nid']) && ! preg_match("/^[0-9]{1,12}$/", $form_state['values']['hostel_nid'])) {//the user is trying to edit a given hostel. OK!
  if (arg(2)) {//the user is trying to edit a given hostel. OK!
    $node = node_load(arg(2));
    $node->title                           = $form_state['values']['block_name'];
    $node->field_block_name[0]['value']    = $form_state['values']['block_name'];
    $node->field_block_type[0]['value']    = $form_state['values']['block_type'];
    $node->field_block_status[0]['value']  = $form_state['values']['block_status'];
    $node->field_hostel_id[0]['nid']  = $form_state['values']['hostel_nid'];

    drupal_set_message($form_state['values']['block_name'] . ' Block was modified successfully!<br />');
    node_save($node);
    drupal_goto("/hostel_allocation/create_modify_block/");
    //unset($_SESSION['eduerp_hostel_nid']);
  }
  else {
    $node = new stdClass();
    $node->type                              = 'blocks';
    $node->uid                               = 1;  // Admin
    $node->status                            = 1;  // Published
    $node->promote                           = 0;
    $node->sticky                            = 0;
    $node->comment                           = 0;
    $node->title                             = $form_state['values']['block_name'];
    $node->field_block_name[0]['value'] 	 = $form_state['values']['block_name'];
	$node->field_block_type[0]['value'] 	 = $form_state['values']['block_type'];
	$node->field_block_status[0]['value'] 	 = $form_state['values']['block_status'];
    $node->field_hostel_id[0]['nid'] 	 = $form_state['values']['hostel_nid'];

    //$department = $node->nid;

    drupal_set_message($form_state['values']['block_name'] . ' Block has been created!<br />');
    node_save($node);
  }

}


function is_Block_Name_Existing($block_name, $hostel_nid, $nid = 0) {
  //we are checking hostel_nid because we will allow two block names to exist but in different hostels
  //now if nid is zero then the check is coming from CREATE else it is coming from UPDATE
  if ($nid != 0)
    $result = db_query("SELECT nid FROM {content_type_blocks} WHERE field_block_name_value = '%s' AND field_hostel_id_nid=%d AND nid != %d ", $block_name, $hostel_nid, $nid);
  else
    $result = db_query("SELECT nid FROM {content_type_blocks} WHERE field_block_name_value='%s' AND field_hostel_id_nid=%d ", $block_name, $hostel_nid);

  if (db_fetch_object($result)) return true;

  return false;
}

function is_valid_block($block_nid) {
  $result = db_query("SELECT nid FROM {content_type_blocks} WHERE nid =%d ", $block_nid);
  if (db_affected_rows($result) > 0 ) return true;

  return false;
}


//for rooms
function hostel_allocation_create_modify_room() {
  global $user;
  ob_start();
  //perform single check for editing
  $forModify = (arg(2) && is_valid_room(arg(2))) ? true : false;
  
  $isAuthorized = true;
  //if (! staff_has_eduerp_role($user->uid, 0, 0, array('Role Assigner'))) $isAuthorized = false; else $isAuthorized = true;

  echo '<br /><hr /><br />';
  
  $navi = "<font size = '1px'><a href = '". url("hostel_allocation/alloc_admin/") ."'>Hostel Administration</a>&nbsp; &raquo; &nbsp;<b>Create or Modify Room</b></font><br /><br />";
  $navi .= '<br /><hr /><br />';
  echo $navi;
  
  if (! $isAuthorized) {
    echo Error_Types(104);

  }
  else {

    if($forModify)
      echo "<b>Modify Room</b> - Please make any required change(s) to the Room<br />";
    else
      echo "<b>Create Room</b> - Please fill the form below to create a new Room<br />";


    echo drupal_get_form('hostel_allocation_create_edit_room_form');
    
  }
  
  echo '<br /><hr /><br />';
  
  if(! $forModify) {
    //display existing hostels here
    echo hostel_allocation_display_available_rooms();

    echo '<br /><hr /><br />';
  }
  
  return ob_get_clean();
}


function hostel_allocation_create_edit_room_form() {
  //if (isset($_SESSION['eduerp_hostel_nid']))$_POST['hostel_nid'] = $_SESSION['eduerp_hostel_nid'];
  //echo arg(2);
  //if (isset($_POST['hostel_nid'])) {
  if (arg(2) && is_valid_room(arg(2))) {
    if (empty($_POST['room_name'])) {
      $result = db_query("SELECT r.nid nid, b.nid block_nid, h.nid hostel_nid, field_hostel_name_value AS hostel_name, field_block_name_value AS block_name, field_room_name_value AS room_name, field_room_capacity_value AS room_capacity, IF(field_room_status_value = 1, 'Active', 'Not Active') AS room_status
      FROM {content_type_rooms} r 
      INNER JOIN {content_type_blocks} b ON r.field_block_id_nid=b.nid
      INNER JOIN {content_type_hostels} h ON b.field_hostel_id_nid=h.nid
      WHERE r.nid = %d", arg(2));
      $room_edit_record = db_fetch_object($result);
      //$room_edit_record = get_rooms(arg(2));
    }
  }
  $form['#title'] = 'Create New Room';
  
  $form['hostel_nid'] = array(
    '#title' => 'Hostel Name',
    '#type' => 'select',
    '#options' => get_hostels(0, true),
    '#ahah' => array('path' => 'staff/ajax/getblocks', 'event' => 'change', 'method' => 'replace', 'wrapper' => 'shwblocks')
    
  );
  if ($room_edit_record){
    //$form['block_name']['#value'] = $room_edit_record->hostel_nid;
    $form['hostel_nid']['#disabled'] = TRUE; //$room_edit_record->hostel_nid;
   }
  
  $form['block_nid'] = array(
    '#title' => 'Block Name',
    '#type' => 'select',
    '#options' => get_blocks(0, true), 
    '#attributes' => array(
      'style' => 'width:100px'),
      '#prefix' => "<div id='shwblocks'>",
      '#suffix' => "</div>",
      '#disabled' => TRUE,
    '#required' => TRUE
  );
  if ($room_edit_record) {
    $form['block_nid']['#value'] = $room_edit_record->block_nid;
    $form['block_nid']['#disabled'] = FALSE;
  }
  
  $form['room_name'] = array(
    '#title' => 'Room Name',
    '#type' => 'textfield',
    '#size' => 40,
    '#required' => TRUE
  );
  if ($room_edit_record) $form['room_name']['#value'] = $room_edit_record->room_name;

  $form['room_capacity'] = array(
    '#title' => 'Room Capacity',
    '#type' => 'textfield',
    '#size' => 40,
    '#required' => TRUE
  );
  if ($room_edit_record) $form['room_capacity']['#value'] = $room_edit_record->room_capacity;
  
  $form['room_status'] = array(
    '#type' => 'select',
    '#options' => array(0=>'Not Active', 1=>'Activate'),
    '#title' => 'Room Status',
    '#required' => TRUE
    );
  if ($room_edit_record) $form['room_status']['#value'] = $room_edit_record->room_status;
  
  if (isset($_POST['room_nid'])) {
    $form['room_nid'] = array(
    '#title' => 'Room nid',
    '#type' => 'hidden',
    '#value' => $_POST['room_nid']
    );

  }
  $form['submit'] = array(
    '#value' => 'Create Room',
    '#type' => 'submit'
  );
  //if (isset($_POST['hostel_nid'])) $form['submit']['#value'] = 'Update Hostel';
  if(arg(2)) $form['submit']['#value'] = 'Update Room';

  return $form;


}


function hostel_allocation_display_available_rooms() {
  $rooms = get_rooms(0, false);
  $html = "
  <div id='assigned_courses'>
  <b>Available Rooms</b> - Please click on a Room name to Modify it.<br /> ";
  if (isset($rooms) && is_array($rooms) && sizeof($rooms)) {
    $html .="
    <table border=1>
      <tr>
        <th><b>#</b></th>
        <th><b>Hostel Name</b></th>
        <th><b>Block Name</b></th>
        <th><b>Room Name</b></th>
        <th><b>Room Capacity</b></th>
        <th><b>Room Status</b></th>
      </tr>";$i = 1;
    
      //$blockTypes = array(0=>'Mixed', 1=>'Male Only', 2=>'Female Only');
      foreach ($rooms as $v){
        if ($i%2) $rcolor = "#E5E5E5"; else $rcolor = "#FFFFFF";
          $html .= "
           <tr bgcolor = \"$rcolor\" onMouseOver = \"this.bgColor = '#FDD381';\" onMouseOut = \"this.bgColor = '$rcolor';\">
             <td>". $i++ ."</td>
             <td>". $v['hostel_name'] ."</td>
             <td>". $v['block_name'] ."</td>
             <td><a href='". url("hostel_allocation/create_modify_room/" . $v['room_nid'])  . "'>". $v['room_name'] ."</a></td>
             <td>". $v['room_capacity'] ."</td>
             <td>". $v['room_status'] ."</td>
           </tr>";
      }
     $html .= "
    </table>";
   }
   else {
     $html .= Error_Types(106);
   
   
   }
  $html .= "

  </div>";
  return $html;

}


function get_rooms($room_nid = 0, $forCombo = true) {

  $sql = "SELECT r.nid nid, b.nid block_nid, h.nid hostel_nid, field_hostel_name_value AS hostel_name, field_block_name_value AS block_name, field_room_name_value AS room_name, field_room_capacity_value AS room_capacity, IF(field_room_status_value = 1, 'Active', 'Not Active') AS room_status
      FROM {content_type_rooms} r 
      INNER JOIN {content_type_blocks} b ON r.field_block_id_nid=b.nid
      INNER JOIN {content_type_hostels} h ON b.field_hostel_id_nid=h.nid ";
  if($room_nid != 0)
    $sql .= " WHERE r.nid = '". $room_nid ."' ";
  
  $sql .="
      ORDER BY field_hostel_name_value, field_block_name_value, field_room_name_value ";
  $r = db_query($sql);
  if (db_affected_rows($r) > 0 ){
    while ($f = db_fetch_object($r)){
      if($forCombo) {
        $rooms[$f->nid] = $f->room_name;
      
      }
      else{
        $rooms[$f->nid]['hostel_name'] = $f->hostel_name;
        $rooms[$f->nid]['hostel_nid'] = $f->hostel_nid;
        $rooms[$f->nid]['block_name'] = $f->block_name;
        $rooms[$f->nid]['block_nid'] = $f->block_nid;
        $rooms[$f->nid]['room_name'] = $f->room_name;
        $rooms[$f->nid]['room_capacity'] = $f->room_capacity;
        $rooms[$f->nid]['room_status'] = $f->room_status;
        $rooms[$f->nid]['room_nid'] = $f->nid;
      }

    }
  }
  else {
    if ($forCombo)
      $rooms[] = strip_tags(Error_Types(106));
    else
      $rooms = array();
    
  }
  return $rooms;
}


function hostel_allocation_create_edit_room_form_validate($form, &$form_state){

  if(arg(2) && is_valid_room(arg(2))) {//validate MODIFY
    if (is_Room_Name_Existing($form_state['values']['room_name'], $form_state['values']['hostel_nid'], arg(2)))
      form_set_error('room_name', Error_Types(132));

  }
  else {//validate CREATE
    if(is_Block_Name_Existing($form_state['values']['room_name'], $form_state['values']['hostel_nid']))
      form_set_error('room_name', Error_Types(132));
  }
  
  if(! preg_match("/^[0-9]{1,4}$/", $form_state['values']['room_capacity'])) {
    form_set_error('room_capacity', Error_Types(134));
  
  }

}


function hostel_allocation_create_edit_room_form_submit($form, &$form_state) {
  //if (isset($form_state['values']['hostel_nid']) && ! preg_match("/^[0-9]{1,12}$/", $form_state['values']['hostel_nid'])) {//the user is trying to edit a given hostel. OK!
  if (arg(2)) {//the user is trying to edit a given hostel. OK!
    
    $node = node_load(arg(2));
    //print_r($node);
    $node->title                             = $form_state['values']['room_name'];
    $node->field_block_id[0][nid] 	         = $form_state['values']['block_nid'];
	$node->field_room_name[0]['value'] 	     = $form_state['values']['room_name'];
	$node->field_room_capacity[0]['value'] 	 = $form_state['values']['room_capacity'];
    $node->field_room_status[0]['value'] 	 = $form_state['values']['room_status'];

    drupal_set_message($form_state['values']['room_name'] . ' Room was modified successfully!<br />');
    node_save($node);
    //drupal_goto("/hostel_allocation/create_modify_room/");

  }
  else {
    $node = new stdClass();
    $node->type                              = 'rooms';
    $node->uid                               = 1;  // Admin
    $node->status                            = 1;  // Published
    $node->promote                           = 0;
    $node->sticky                            = 0;
    $node->comment                           = 0;
    $node->title                             = $form_state['values']['room_name'];
    $node->field_block_id[0][nid] 	         = $form_state['values']['block_nid'];
	$node->field_room_name[0]['value'] 	     = $form_state['values']['room_name'];
	$node->field_room_capacity[0]['value'] 	 = $form_state['values']['room_capacity'];
    $node->field_room_status[0]['value'] 	 = $form_state['values']['room_status'];

    drupal_set_message($form_state['values']['room_name'] . ' Room has been created!<br />');
    node_save($node);
  }

}


function is_Room_Name_Existing($room_name, $block_nid, $nid = 0) {
  //we are checking hostel_nid because we will allow two block names to exist but in different hostels
  //now if nid is zero then the check is coming from CREATE else it is coming from UPDATE
  if ($nid != 0)
    $result = db_query("SELECT nid FROM {content_type_rooms} WHERE field_room_name_value = '%s' AND field_block_id_nid=%d AND nid != %d ", $room_name, $block_nid, $nid);
  else
    $result = db_query("SELECT nid FROM {content_type_rooms} WHERE field_room_name_value='%s' AND field_block_id_nid=%d ", $room_name, $block_nid);

  if (db_fetch_object($result)) return true;

  return false;
}

function is_valid_room($room_nid) {
  $result = db_query("SELECT nid FROM {content_type_rooms} WHERE nid =%d ", $room_nid);
  if (db_affected_rows($result) > 0 ) return true;

  return false;
}

//for rooms ends here
?>